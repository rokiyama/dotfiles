[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
      \   'colorscheme': 'wombat',
      \   'component': {
      \     'lineinfo': 'î‚¡%3l:%-2v',
      \   },
      \   'component_function': {
      \     'readonly': 'LightlineReadonly',
      \     'bomb': 'LightlineBomb',
      \     'fugitive': 'LightlineFugitive',
      \     'cwd': 'Cwd'
      \   },
      \   'separator': { 'left': 'î‚°', 'right': 'î‚²' },
      \   'subseparator': { 'left': 'î‚±', 'right': 'î‚³' },
      \   'active': {
      \     'left': [ [ 'mode', 'paste' ],
      \             [ 'readonly', 'filename', 'modified', 'bomb' ] ],
      \     'right': [ [ 'lineinfo' ],
      \                [ 'percent' ],
      \                [ 'fileformat', 'fileencoding', 'filetype' ],
      \                [ 'cwd' ] ]
      \   }
      \ }
function! LightlineReadonly()
  return &readonly ? 'î‚¢' : ''
endfunction
function! LightlineBomb()
  return &bomb ? 'ðŸ’£ðŸ’¥[BOM]' : ''
endfunction
function! LightlineFugitive()
  if exists('*fugitive#head')
    let branch = fugitive#head()
    return branch !=# '' ? 'î‚ '.branch : ''
  endif
  return ''
endfunction
function! Cwd()
  return pathshorten(getcwd()) . '/'
endfunction
'''
hook_source = '''
set noshowmode
'''


#[[plugins]]
#repo = 'thinca/vim-singleton'
#if = "has('gui_running')"

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'wellle/targets.vim'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'jiangmiao/auto-pairs'

[[plugins]]
repo = 'tomasr/molokai'
hook_add = '''
colorscheme molokai
'''

# [[plugins]]
# repo = 'Shougo/deoplete.nvim'
# hook_add = '''
# let g:deoplete#enable_at_startup = 1
# '''
# hook_source = '''
# call deoplete#custom#option({
#     \ 'auto_complete_delay': 0,
#     \ 'omni_patterns': { 'go': '[^. *\t]\.\w*' },
#     \ })
# '''

[[plugins]]
repo = 'aklt/plantuml-syntax'

[[plugins]]
repo = 'LeafCage/foldCC.vim'
hook_add = '''
let g:foldCCtext_enable_autofdc_adjuster = 1
'''
hook_source = '''
set foldtext=FoldCCtext()
'''

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
hook_add = '''
let g:asyncomplete_auto_popup = 0
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'

[[plugins]]
repo = 'mattn/vim-lsp-settings'
merged = 0
hook_add = '''
function! s:on_lsp_buffer_enabled() abort
  setlocal omnifunc=lsp#complete
  setlocal signcolumn=yes
  nmap <buffer> gd <plug>(lsp-definition)
  nmap <buffer> <f2> <plug>(lsp-rename)
  inoremap <expr> <cr> pumvisible() ? "\<c-y>\<cr>" : "\<cr>"
endfunction

augroup lsp_install
  au!
  autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END
command! LspDebug let lsp_log_verbose=1 | let lsp_log_file = expand('~/lsp.log')

let g:lsp_diagnostics_enabled = 1
let g:lsp_diagnostics_echo_cursor = 1
let g:asyncomplete_auto_popup = 1
let g:asyncomplete_auto_completeopt = 0
let g:asyncomplete_popup_delay = 200
let g:lsp_text_edit_enabled = 1
'''
